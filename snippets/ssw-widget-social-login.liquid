{% comment %}
/**************************************************
* DO NOT MODIFY THIS FILE!!!                      *
* IT WILL BE OVERWRITTEN BY UPDATES FROM GROWAVE! *
**************************************************/
{% endcomment %}
{% assign gwSettings = shop.metafields.ssw['settings'] %}
{% if gwSettings.type == 'json' %}
  {% assign gwSettings = shop.metafields.ssw['settings'].value %}
{% endif %}
{% assign ssw_manual_uninstall = shop.metafields.ssw['manual_uninstall'] | plus: 0 %}
{% assign ssw_script_tags_allowed = shop.metafields.ssw['script_tags_allowed'] | plus: 0 %}
{% if content_for_header contains 'ssw-empty.js' or ssw_manual_uninstall == 1 or ssw_script_tags_allowed != 1 %}
{% assign customer_locale = shop.locale | prepend: 'lang_' %}
{% unless shop.metafields.ssw[customer_locale] %}
  {% for published_locale in shop.published_locales %}
    {% if published_locale.primary == true %}
      {% assign customer_locale = published_locale.iso_code | prepend: 'lang_' %}
    {% endif %}
  {% endfor %}
{% endunless %}
{% unless customer %}
<div class='ssw-social-login-widget gw-hide'>
    <div class="ssw-socialconnect">
        {% render 'ssw-social-buttons' %}
    </div>
</div>
<div class="ssw-accept-wrapper" style="display: none">
  {% if gwSettings.force_accepts_marketing == 1 %}
    <input type="hidden" class="ssw-accept-marketing__input_hidden" name="customer[accepts_marketing]" value="true">
  {% else %}
    <label class="ssw-accept-marketing">
      {{ shop.metafields.ssw[customer_locale].value.accept_marketing }}
      <input class="ssw-accept-marketing__input" name="accepts_marketing" type="checkbox" onclick="sswOnAcceptMarketingRegisterPage(this)">
      <input class="ssw-accept-marketing__input_hidden" type="hidden" name="customer[accepts_marketing]" value="false">
    </label>
  {% endif %}
</div>
  <style>
    .gw-hide {
      display: none;
    }
  </style>
    <script type="text/javascript">
      /* global sswRun */
      sswRun(function () {
          let loader = Ssw.gwAssetsManifestLoader;
          loader.requireByKey("login.critical.js", "SCRIPT");
          ssw('.ssw-social-login-widget').removeClass('gw-hide');
        let options = {
          rootMargin: '0px',
          threshold: 0.1
        };
        let callback = function (entries, observer) {
          if (entries[0].isIntersecting) {
            loader.requireByKey("login.main.css", "STYLE");
            loader.requireByKey("login.main.js", "SCRIPT");
            observer.unobserve(entries[0].target);
          }
        };
        let observer = new IntersectionObserver(callback, options);
        observer.observe(document.querySelector(".ssw-social-login-widget"));
      });
    </script>
{% endunless %}
{% endif %}